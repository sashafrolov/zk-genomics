import "./shaRound" as shaRound

// Initial values, FIPS 180-3, section 5.3.3
// https://csrc.nist.gov/csrc/media/publications/fips/180/3/archive/2008-10-31/documents/fips180-3_final.pdf
const u64[8] IV = [ 
    0x6a09e667f3bcc908,
    0xbb67ae8584caa73b,
    0x3c6ef372fe94f82b,
    0xa54ff53a5f1d36f1,
    0x510e527fade682d1,
    0x9b05688c2b3e6c1f,
    0x1f83d9abfb41bd6b,
    0x5be0cd19137e2179
]

// A function that takes N u64[8] arrays as inputs, concatenates them,
// and returns their sha256 compression as a u64[8].
// Note: no padding is applied
def main<N>(u64[N][16] a) -> u64[8]:
	u64[8] current = IV

	for u32 i in 0..N do
		current = shaRound(a[i], current)
	endfor

	return current
